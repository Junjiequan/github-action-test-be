name: Generate and Publish SDK for multiple languages

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: 18.x

jobs:
  setup-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Pull MongoDB Image
        run: |
          docker pull mongo:latest
          docker run -d --name mongo-container -p 27017:27017 mongo:latest

      - name: Install Backend and wait for it to be ready
        env:
          MONGODB_URI: "mongodb://localhost:27017/scicat"
          JWT_SECRET: thisIsTheJwtSecret
        run: |
          cp functionalAccounts.json.test functionalAccounts.json
          npm install -g wait-on && npm install
          npm run start & wait-on http://localhost:3000/api/v3/health --timeout 200000

      - name: Download the Swagger schema
        run: curl -o ./swagger-schema.json http://localhost:3000/explorer-json

      - name: Cache Swagger schema
        uses: actions/cache@v4
        with:
          key: swagger-schema-${{ github.sha }}
          path: ./swagger-schema.json

  generate-sdk:
    runs-on: ubuntu-latest
    needs: setup-backend
    strategy:
      matrix:
        generator: [python, typescript-angular]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore Cached Swagger schema
        uses: actions/cache/restore@v4
        with:
          path: ./swagger-schema.json
          key: swagger-schema-${{ github.sha }}

      - name: Generate Client
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: ${{ matrix.generator }}
          openapi-file: ./swagger-schema.json
          config-file: .github/openapi/${{ matrix.generator }}-config.json
          command-args: -o ./sdk/${{ matrix.generator }}

      - name: Upload generated SDK JSON
        uses: actions/cache@v4
        with:
          key: sdk-directory
          path: ./sdk/${{ matrix.generator }}

      - run: |
          ls -la
          ls -la sdk

  npm-publish:
    needs: generate-sdk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org/"

      - name: Restore cached generated SDK
        uses: actions/cache/restore@v4
        with:
          key: sdk-directory
          path: ./sdk/

      - name: Publish SDK to npm
        run: |
          npm install
          npm run build
          cd dist && npm publish --access public
        working-directory: ./sdk/typescript-angular
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  pypi-publish:
    needs: generate-sdk
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/Scicat-Python-SDK
    permissions:
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore cached generated SDK
        uses: actions/cache/restore@v4
        with:
          key: sdk-directory
          path: ./sdk/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
        working-directory: ./sdk/python

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel
        working-directory: ./sdk/python

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./sdk/python/dist/
