name: Bump release version and build-push

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

env:
  NODE_VERSION: 20.x
  PYTHON_VERSION: 3.x
  RELEASE_BRANCH: main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.without_v.outputs.stripped_tag }}
      changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
      - uses: actions/checkout@v4

      ## Commit message examples for Release type (patch|minor|major) can be found:
      ## https://github.com/mathieudutour/github-tag-action
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: ${{ env.RELEASE_BRANCH }}

      - name: Strip 'v' from the tag
        id: without_v
        run: |
          TAG=${{ steps.tag_version.outputs.new_tag }}
          WITHOUT_V=${TAG#v}
          echo "::set-output name=stripped_tag::$STRIPPED_TAG"

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
        

      ## The setup-qemu-action simplifies the setup of QEMU for cross-platform builds
      ## https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}



  start-backend-and-upload-swagger-schema:
    runs-on: ubuntu-latest
    needs: build
    # outputs:
    #   current-version: ${{ steps.package-version.outputs.current-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - run: echo "New tag is ${{ needs.build.outputs.new_tag }} and changelog is ${{ needs.build.outputs.changelog }}"

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{env.NODE_VERSION}}

  #     - name: get-npm-version
  #       id: package-version
  #       uses: martinbeentjes/npm-get-version-action@v1.3.1

  #     - name: Pull MongoDB Image
  #       run: |
  #         docker pull mongo:latest
  #         docker run -d --name mongo-container -p 27017:27017 mongo:latest

  #     - name: Install Backend and wait for it to be ready
  #       env:
  #         MONGODB_URI: "mongodb://localhost:27017/scicat"
  #         JWT_SECRET: thisIsTheJwtSecret
  #       run: |
  #         npm install -g wait-on && npm install
  #         npm run start & wait-on http://localhost:3000/api/v3/health --timeout 200000

  #     - name: Download the Swagger schema
  #       run: curl -o ./swagger-schema.json http://localhost:3000/explorer-json

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: swagger-schema
  #         path: ./swagger-schema.json

  # generate-and-upload-sdk:
  #   runs-on: ubuntu-latest
  #   needs: start-backend-and-upload-swagger-schema
  #   strategy:
  #     matrix:
  #       generator: [python, typescript]

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set packageVersion variable
  #       run: echo "packageVersion=${{ needs.start-backend-and-upload-swagger-schema.outputs.current-version }}" >> $GITHUB_ENV

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: swagger-schema
  #         path: .

  #     - name: Check packageVersion
  #       run: |
  #         if [ -z "$packageVersion" ]; then
  #           echo "packageVersion is not set, exiting..."
  #           exit 1
  #         fi

  #     - name: Generate Client
  #       uses: openapi-generators/openapitools-generator-action@v1
  #       with:
  #         generator: ${{ matrix.generator }}
  #         openapi-file: ./swagger-schema.json
  #         config-file: .github/openapi/${{ matrix.generator }}-config.json
  #         command-args: |
  #           -o ./sdk/${{ matrix.generator }} $(
  #           if [ "${{ matrix.generator }}" == "typescript" ]; then
  #             echo "--additional-properties=npmVersion=$packageVersion";
  #           elif [ "${{ matrix.generator }}" == "python" ]; then
  #             echo "--additional-properties=packageVersion=$packageVersion";
  #           fi
  #           )

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: sdk-${{ matrix.generator }}
  #         path: ./sdk

  # npm-publish:
  #   needs: generate-and-upload-sdk
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: npm-sdk-package
  #     url: https://www.npmjs.com/package/@scicat-sdk/typescript-angular

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         registry-url: "https://registry.npmjs.org/"

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: sdk-typescript
  #         path: ./sdk

  #     - name: Publish package
  #       run: |
  #         npm install
  #         npm run build
  #         npm publish --access public
  #       working-directory: ./sdk/typescript/
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # pypi-publish:
  #   needs: generate-and-upload-sdk
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: pypi-sdk-package
  #     url: https://pypi.org/p/Scicat-Python-SDK
  #   permissions:
  #     id-token: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: sdk-python
  #         path: ./sdk

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install setuptools wheel
  #       working-directory: ./sdk/python/

  #     - name: Build package
  #       run: |
  #         python setup.py sdist bdist_wheel
  #       working-directory: ./sdk/python/

  #     - name: Publish package
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         packages-dir: ./sdk/python/dist/
