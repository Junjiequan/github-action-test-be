name: Generate and Publish SDK for multiple languages

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: 18.x

jobs:
  generate-sdk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Pull MongoDB Image
        run: |
          docker pull mongo:latest
          docker run -d --name mongo-container -p 27017:27017 mongo:latest

      - name: Start Backend and wait for it to be ready
        env:
          MONGODB_URI: "mongodb://localhost:27017/scicat"
          JWT_SECRET: thisIsTheJwtSecret
        run: |
          npm install -g wait-on
          cp functionalAccounts.json.test functionalAccounts.json
          npm install
          npm run start &
          wait-on http://localhost:3000/api/v3/health --timeout 200000

      - name: Test OpenAPI URL accessibility
        run: curl -o ./swagger-schema.json http://localhost:3000/explorer-json

      - name: Generate Client
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: python
          openapi-file: ./swagger-schema.json
          config-file: .github/openapi/python-config.json

      - name: Upload generated SDK JSON
        uses: actions/cache@v4
        with:
          key: sdk-${{ github.sha }}
          path: ./sdk

  # npm-publish:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         registry-url: "https://registry.npmjs.org/"

  #     - name: Publish SDK to npm
  #       run: |
  #         npm install
  #         npm run build
  #         cd dist && npm publish --access public
  #       working-directory: ./sdk/typescript
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  pypi-publish:
    needs: generate-sdk
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/Scicat-Python-SDK
    permissions:
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache generated SDK
        uses: actions/cache@v4
        with:
          key: sdk-${{ github.sha }}
          path: ./sdk/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
        working-directory: ./sdk/python

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel
        working-directory: ./sdk/python

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./sdk/python/dist/
